// scss-lint:disable ImportantRule, QualifyingElement, DuplicateProperty

// Reboot
//
// Global resets to common HTML elements and more for easier usage by Bootstrap.
// Adds additional rules on top of Normalize.css, including several overrides.


// Reset the box-sizing
//
// Change from `box-sizing: content-box` to `border-box` so that when you add
// `padding` or `border`s to an element, the overall declared `width` does not
// change. For example, `width: 100px;` will always be `100px` despite the
// `border: 10px solid red;` and `padding: 20px;`.
//
// Heads up! This reset may cause conflicts with some third-party widgets. For
// recommendations on resolving such conflicts, see
// http://getbootstrap.com/getting-started/#third-box-sizing.
//
// Credit: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

html {
    height: 100%;
    box-sizing: border-box;
    font-size: $font-size-root;
    -ms-overflow-style: scrollbar;
    -webkit-tap-highlight-color:rgba(255, 255, 255, 0);

    @include respond-to(md) {
        font-size: $font-size-root-md;
    }
    @include respond-to(lg) {
        font-size: $font-size-root-lg;
    }
}

// iphone 4/5
// @media only screen
// and (min-device-width: 320px)
// and (min-resolution: 2dppx) {
//     html {
//         font-size: $font-size-root;
//     }
// }

// // iphone 6/7
// @media only screen
// and (min-device-width: 360px)
// and (min-resolution: 2dppx) {
//     html {
//         font-size: $font-size-root-md;
//     }
// }

// // iphone 6/7 plus
// @media only screen
// and (min-device-width: 414px)
// and (min-resolution: 3dppx) {
//     html {
//         font-size: $font-size-root-lg;
//      }
// }

*,
*::before,
*::after {
    box-sizing: inherit;
}


// Make viewport responsive
//
// @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
// some cases. See http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
// Eventually @viewport will replace <meta name="viewport">.
//
// However, `device-width` is broken on IE 10 on Windows (Phone) 8,
// (see http://timkadlec.com/2013/01/windows-phone-8-and-device-width/ and https://github.com/twbs/bootstrap/issues/10497)
// and the fix for that involves a snippet of JavaScript to sniff the user agent
// and apply some conditional CSS.
//
// See http://getbootstrap.com/getting-started/#support-ie10-width for the relevant hack.
//
// Wrap `@viewport` with `@at-root` for when folks do a nested import (e.g.,
// `.class-name { @import "bootstrap"; }`).
@at-root {
    @-ms-viewport { width: device-width; }
}


body {
    height: 100%;
    font-family: $font-family-base;
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $body-color;
    background-color: $body-bg;
    padding: 0;
    margin: 0;
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
    outline: none !important;
}


//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
h1,
h2,
h3,
h4,
h5,
h6 {
    margin-top: 0;
    margin-bottom: .5rem;
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
    margin-top: 0;
    margin-bottom: .5rem;
}

address {
    margin-bottom: .5rem;
    font-style: normal;
    line-height: inherit;
}

ol,
ul,
dl {
    margin-top: 0;
    margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
    margin-bottom: 0;
}

dt {
    font-weight: bold;
}

dd {
    margin-bottom: .5rem;
    margin-left: 0; // Undo browser default
}

blockquote {
    margin: 0 0 1rem;
}


//
// Links
//

a {
    cursor: none;
    color: $link-color;
    text-decoration: $link-decoration;

    &:active,
    &:focus {
        color: $link-color;
        text-decoration: none;
    }

    &:active {
        color: $link-active-color;
    }
}

// And undo these styles for placeholder links/named anchors (without href).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.
// See https://github.com/twbs/bootstrap/issues/19402

a:not([href]) {
    color: inherit;
    text-decoration: none;

    &:hover,
    &:focus {
        color: inherit;
        text-decoration: none;
    }

    &:focus {
        outline: none;
    }
}


//
// Code
//

pre {
    margin-top: 0;
    margin-bottom: 1rem;
}


//
// Figures
//

figure {
    margin: 0 0 1rem;
}


//
// Images
//

img {
    vertical-align: middle;
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
    cursor: pointer;
}


// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
    touch-action: manipulation;
}


//
// Tables
//

table {
    background-color: $table-bg;
}

caption {
    padding-top: $table-cell-padding;
    padding-bottom: $table-cell-padding;
    color: $text-muted;
    text-align: left;
    caption-side: bottom;
}

th {
    text-align: left;
}


//
// Forms
//

label {
    display: inline-block;
}

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
textarea {
    margin: 0;
    line-height: inherit;
    border-radius: 0;
}

textarea {
    font-size: $font-size-base;
    resize: none;
}

fieldset {
    min-width: 0;
    padding: 0;
    margin: 0;
    border: 0;
}

legend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: .5rem;
    font-size: 1.5rem;
    line-height: inherit;
}

input[type="search"] {
    -webkit-appearance: none;
}

// todo: needed?
output {
    display: inline-block;
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
[hidden] {
    display: none !important;
}
